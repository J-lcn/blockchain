syntax = "proto3";

package pb;

option go_package="./pb";

message TxRequest {
    // payload
    Payload payload = 1;
    // sender account and sender's signature
    EndorsementEntry sender = 2;
    // endorsers account and signatures
    repeated EndorsementEntry endorsers = 3;
    // payer account and signature
    EndorsementEntry payer = 4;
}

message Payload {
    // blockchain identifier
    string chain_id = 1;
    // transaction type
    TxType tx_type = 2;
    // transaction id set by sender, should be unique
    string tx_id = 3;
    // transaction timestamp, in unix timestamp format, seconds
    int64 timestamp = 4;
    // expiration timestamp in unix timestamp format
    // after that the transaction is invalid if it is not included in block yet
    int64 expiration_time = 5;
    // smart contract name
    string contract_name = 6;
    // invoke method
    string method = 7;
    // invoke parameters in k-v format
    repeated KeyValuePair parameters = 8;
    // sequence number, default is 0
    uint64 sequence = 9;
    // transaction limitation
    Limit limit = 10;
}

enum TxType {
  INVOKE_CONTRACT = 0;
  QUERY_CONTRACT = 1;
  SUBSCRIBE = 2;
  ARCHIVE = 3;
}

enum MemberType {
  CERT = 0;
  CERT_HASH = 1;
  PUBLIC_KEY = 2;
  DID = 3;
  ALIAS = 4;
  ADDR = 5;
}


message KeyValuePair {
    string key = 1;
    bytes value = 2;
}

message Limit {
    // gas limit
    uint64 gas_limit = 1;
}

message EndorsementEntry {
    // signer
    Member signer = 1;
    // signature
    bytes signature = 2;
}

message Member {
    // organization identifier of the member
    string org_id = 1;
    // member type
    MemberType member_type = 2;
    // member identity related info bytes
    bytes member_info = 3;
}

